/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet';
import { TokenStandard, tokenStandardBeet } from './TokenStandard';
import { Collection, collectionBeet } from './Collection';
import { Uses, usesBeet } from './Uses';
import { TokenProgramVersion, tokenProgramVersionBeet } from './TokenProgramVersion';
import { Creator, creatorBeet } from './Creator';
export type MetadataArgs = {
  name: string;
  symbol: string;
  uri: string;
  sellerFeeBasisPoints: number;
  primarySaleHappened: boolean;
  isMutable: boolean;
  editionNonce: beet.COption<number>;
  tokenStandard: beet.COption<TokenStandard>;
  collection: beet.COption<Collection>;
  uses: beet.COption<Uses>;
  tokenProgramVersion: TokenProgramVersion;
  creators: Creator[];
};

/**
 * @category userTypes
 * @category generated
 */
export const metadataArgsBeet = new beet.FixableBeetArgsStruct<MetadataArgs>(
  [
    ['name', beet.utf8String],
    ['symbol', beet.utf8String],
    ['uri', beet.utf8String],
    ['sellerFeeBasisPoints', beet.u16],
    ['primarySaleHappened', beet.bool],
    ['isMutable', beet.bool],
    ['editionNonce', beet.coption(beet.u8)],
    ['tokenStandard', beet.coption(tokenStandardBeet)],
    ['collection', beet.coption(collectionBeet)],
    ['uses', beet.coption(usesBeet)],
    ['tokenProgramVersion', tokenProgramVersionBeet],
    ['creators', beet.array(creatorBeet)],
  ],
  'MetadataArgs',
);
