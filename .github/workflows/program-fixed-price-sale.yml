name: Program Fixed Price Sale

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: 1.9.14
  RUST_TOOLCHAIN: stable

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      core: ${{ steps.filter.outputs.core }}
      package: ${{ steps.filter.outputs.package }}
      workflow: ${{ steps.filter.outputs.workflow }}
    steps:
      - uses: actions/checkout@v2
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            core:
              - 'core/**'
            package:
              - 'fixed-price-sale/**'
            workflow:
              - '.github/workflows/program-fixed-price-sale.yml'
  build-and-test-fixed-price-sale:
    needs: changes
    if: ${{ needs.changes.outputs.core == 'true' || needs.changes.outputs.package == 'true' || needs.changes.outputs.workflow == 'true' }}
    runs-on: ubuntu-latest
    env:
      cache_id: program-fixed-price-sale

    steps:
      # Setup Deps
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-linux-build-deps
      - uses: ./.github/actions/install-solana
        with: 
          solana_version: ${{ env.SOLANA_VERSION }}
      - uses: ./.github/actions/install-rust
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      # Restore Cache from previous build/test
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./rust/target
          key: ${{ env.cache_id }}-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUSTC_HASH }}

      # Build deps
      - uses: ./.github/actions/build-token-metadata
      # Run test
      - name: test-fixed-price-sale-program
        id: run_test
        working-directory: ./fixed-price-sale/program
        run: |
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --test buy -- --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --test change_market -- --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --test claim_resource -- --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --test close_market -- --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --test create_store -- --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --test init_selling_resource -- --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --test resume_market -- --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --test save_primary_metadata_creators -- --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --test suspend_market -- --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --test withdraw -- --test-threads 1
