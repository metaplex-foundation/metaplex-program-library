name: Program Token Metadata

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  id-token: write
  contents: write

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: 1.9.22
  RUST_TOOLCHAIN: stable

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      core: ${{ steps.filter.outputs.core }}
      package: ${{ steps.filter.outputs.package }}
    steps:
      - uses: actions/checkout@v2
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            core:
              - 'core/**'
            package:
              - 'token-metadata/**'

  build-and-test-token-metadata:
    needs: changes
    if: ${{ needs.changes.outputs.core == 'true' || needs.changes.outputs.package == 'true' }}
    runs-on: ubuntu-latest
    env:
      cache_id: program-token-metadata

    steps:
      # Setup Deps
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-linux-build-deps
      - uses: ./.github/actions/install-solana
        with:
          solana_version: ${{ env.SOLANA_VERSION }}
      - uses: ./.github/actions/install-rust
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      # Restore Cache from previous build/test
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./rust/target
          key:
            ${{ env.cache_id }}-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{
            env.RUSTC_HASH }}

      # Run lint checks
      - uses: ./.github/actions/verify-rust
        with:
          working-directory: ./token-metadata/program

      # Build deps
      - uses: ./.github/actions/build-token-vault

      # Run test
      - name: test-token-metadata-program
        id: run_test
        working-directory: ./token-metadata/program
        run: |
          cargo +${{ env.RUST_TOOLCHAIN }} test -- --nocapture --test-threads 1
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --version
          cargo +${{ env.RUST_TOOLCHAIN }} test-bpf --bpf-out-dir ../../target/deploy/ -- --nocapture --test-threads 1

  upgrade-version-and-publish-binary:
    needs: changes
    if: ${{ (needs.changes.outputs.core == 'true' || needs.changes.outputs.package == 'true') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    env:
      cache_id: program-token-metadata

    steps:
      - uses: actions/checkout@v2
      - name: Publish updated artifacts to Crates and Github
        uses: ./.github/actions/publish-to-crates
        id: publish-to-crates
        with:
          cargo-token: ${{ secrets.CARGO_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          package-name: token-metadata
          path-to-cargo: ./token-metadata/program/Cargo.toml
          commit-sha: ${{ github.sha }}
          branch: ${{ github.ref }}

      - uses: ./.github/actions/setup-aws-env/
      - name: Build and upload
        uses: ./.github/actions/build-and-upload/
        id: upload-binary-metadata
        with:
          # based on Cargo.toml package name
          program-binary: mpl_token_metadata.so
          account-id: ${{ env.BINARY_STORAGE_ACCOUNT_ID }}
          region: ${{ env.BINARY_STORAGE_REGION }}
          role: ${{ env.BINARY_STORAGE_ROLE }}
          bucket: ${{ env.BINARY_STORAGE_BUCKET }}
          prefix: token-metadata
